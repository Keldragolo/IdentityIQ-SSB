<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE Rule PUBLIC "sailpoint.dtd" "sailpoint.dtd">
<Rule language="beanshell" name="WebServiceBeforeOperation rule" type="WebServiceBeforeOperationRule">
  <Description>This rule is used by the  Web Services connector before performing any operation like testconnection, aggregation etc .</Description>
  <Signature returnType="EndPoint">
    <Inputs>
      <Argument name="log">
        <Description>
          The log object associated with the SailPointContext.
        </Description>
      </Argument>
      <Argument name="context">
        <Description>
          A sailpoint.api.SailPointContext object that can be used to query the database if necessary.
        </Description>
      </Argument>
      <Argument name="application">
        <Description>The application whose data file is being processed.</Description>
      </Argument>
      <Argument name="requestEndPoint">
        <Description>The current request information contain header, body, context url, method type, response attribute map, 
                successful response code
                </Description>
      </Argument>
      <Argument name="oldResponseMap">
        <Description>earlier response object </Description>
      </Argument>
      <Argument name="restClient">
        <Description>REST Client Object</Description>
      </Argument>
    </Inputs>
    <Returns>
      <Argument name="EndPoint">
        <Description>Updated EndPoint Object</Description>
      </Argument>
    </Returns>
  </Signature>
  <Source>
 <![CDATA[ 
import org.apache.log4j.Logger;
import org.apache.log4j.Level;
import java.util.HashMap;
import java.util.Map;
Logger log = Logger.getLogger("cof.Rule.AuditBoardBeforeRule");

log.debug("***currentbody***"+  requestEndPoint.getBody().get("jsonBody"));
log.debug("***oldresponse email***"+  oldResponseMap.get("emails.primary.value"));
log.debug("***oldresponse given***"+  oldResponseMap.get("givenName"));
log.debug("***oldresponse family***"+  oldResponseMap.get("familyName"));

String email = oldResponseMap.get("emails.primary.value").toString().replace("[","").replace("]","");


String  currentbody = requestEndPoint.getBody().get("jsonBody");

currentbody = currentbody.replace("plangiven", oldResponseMap.get("givenName"));

currentbody = currentbody.replace("planfamily", oldResponseMap.get("familyName"));
currentbody = currentbody.replace("planemail", email);

log.debug("currentbody after"+  currentbody);

Map newMap= new HashMap();

newMap.put("jsonBody", currentbody);
newMap.put("bodyFormat", "raw");

requestEndPoint.setBody(newMap);


log.debug("final body"+  requestEndPoint.getBody());

return requestEndPoint;

]]>
</Source>
</Rule>
